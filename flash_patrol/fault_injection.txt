To do the fault injection, we created a small dummy filesystem:
---
dd if=/dev/zero of=./test_fs bs=1M count=10
mkfs.ext2 -F ./test_fs 
sudo mkdir /mnt/inotify
sudo mount ./test_fs /mnt/inotify/
---

and created a large random file:
---
dd if=/dev/urandom of=/mnt/inotify/file bs=1M count=9
---

and modified it with a file containing all A
---
9.0M  fonz.txt
---
 
line 300000 seems good for bit flipping

Here is the golden checksum:
---
zak@mustang0:~$ md5sum /mnt/inotify/fonz.txt 
820479c00e663205a90c04b77c9014b8  /mnt/inotify/fonz.txt
---

tool to reset the filesystem state:
---
zak@mustang0:~$ ./reset_testfs.sh 
---

I then had these disks available on mustang0:
---
0:1:8 0:1:9 0:1:10 0:1:11 0:1:12
---

---
root@mustang0:~# omconfig storage controller action=createvdisk controller=0
pdisk=0:1:8,0:1:9 size=max raid=r1
---

---
Disk /dev/sdb: 239.4 GB, 239444426752 bytes
---

I then created a 10M disk partition on /dev/sdb1

now using this for fault injection:
---
zak@mustang0:~$ md5sum /mnt/inotify/fonz.txt 
820479c00e663205a90c04b77c9014b8  /mnt/inotify/fonz.txt
zak@mustang0:~$ sudo ./clear_cache.sh 
zak@mustang0:~$ sudo ./github/ece542/flash_patrol/flip /dev/sdb1 2000000
Read A at pos 2000000
Wrote @ at pos 2000000
zak@mustang0:~$ md5sum /mnt/inotify/fonz.txt 
820479c00e663205a90c04b77c9014b8  /mnt/inotify/fonz.txt
---

---
zak@mustang0:~/github/ece542/flash_patrol$ export PATROL_DIR=/mnt/inotify
---

now moving on to cubesat data

---
for d in `ls`; do cp ${d} ./tmp; cat tmp tmp > ${d}; rm tmp; done;
---

and lots of little files:
---
for d in `ls`; do for i in {1..58}; do cp ${d} ${d}_${i}; done; done;
---

---
for f in /home/zak/cubesat/data/*; do
  cp ${f} /mnt/inotify/cubesat/
  sleep 0.05
done
---

out of curiosity default 512MB ext3 filesystem:
---
zak@mustang0:~$ df -i $_
Filesystem     Inodes IUsed IFree IUse% Mounted on
/dev/loop0      32768    11 32757    1% /mnt/crapfs
---

for posterity:
---
zak@mustang0:~/github/ece542$ cat ~/reset_testfs.sh 
#!/bin/bash
DISK=/dev/sdb1
sudo umount /mnt/inotify
sudo mkfs.ext2 -m 0 -F ${DISK}
sudo mount ${DISK} /mnt/inotify
sudo chown zak /mnt/inotify
---

and the overall results:
---
zak@mustang0:~/github/ece542/flash_patrol/data$ grep Daemon *log|wc -l
402
zak@mustang0:~/github/ece542/flash_patrol/data$ grep failed *log|wc -l
337
---

337/402 = 83%

I then started running this experiment:
---
#!/bin/bash
~/reset_testfs.sh
make kill
make run
sleep 0.1
find /home/zak/cubesat/data/ -name "*txt" -type f -exec cp {} /mnt/inotify/ \;
>/dev/null 2>&1
sleep 2.0
files=(/mnt/inotify/*)
killall flash_patrold
FILE=`printf "%s\n" ${files[RANDOM % ${#files[@]}]}`
echo $FILE
NBYTES=`stat -c%s ${FILE}`
RAND=`shuf -i 0-${NBYTES} -n 1`
echo $FILE
echo $RAND
sudo ./flip $FILE $RAND
sleep 2.0
---

which kills patrold after it generates the checksums and then corrupts a
random file
